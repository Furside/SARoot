@model CIS.Models.Contact
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin:auto">
    <div class="row">
        <div class="col-md-8 m-auto">
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title">Edit</h6>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row mb-2 g-2">
                            <div class="col-md-6">
                                @Html.LabelFor(model => Model.Obj_EIDHolder, htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownListFor(model => Model.EID, new CIS.Models.Contact().ListEmployee(), "Select Employee", new { @class = "form-select mb-2" })
                                @Html.ValidationMessageFor(model => Model.EID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.NetworkNo, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.NetworkNo, new { htmlAttributes = new { @class = "form-control mb-2" } })
                                @Html.ValidationMessageFor(model => model.NetworkNo, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.NetworkTypeID, htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownListFor(model => model.NetworkTypeID, new CIS.Models.NetworkType().NetworkTypes(), "Select Network", new { @class = "form-select mb-2" })
                                @Html.ValidationMessageFor(model => model.NetworkTypeID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.BinCard, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.BinCard, new { htmlAttributes = new { @class = "form-control mb-2" } })
                                @Html.ValidationMessageFor(model => model.BinCard, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "form-label" })
                                @Html.TextAreaFor(model => model.Remarks, 10, 5, new { @class = "form-control mb-2" })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12">
                                <input type="submit" name="name" value="Save" class="btn btn-primary" />
                                @Html.ActionLink("Back to List", "Index", "Home", "", new { @class = "btn btn-secondary" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
